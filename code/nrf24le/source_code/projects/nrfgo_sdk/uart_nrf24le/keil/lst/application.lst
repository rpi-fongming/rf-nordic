C51 COMPILER V9.51   APPLICATION                                                           10/03/2013 13:56:58 PAGE 1   


C51 COMPILER V9.51, COMPILATION OF MODULE APPLICATION
OBJECT MODULE PLACED IN .\build\application.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE ..\src\application.c REGFILE(.\build\uart_nrf24le1.ORC) BROWSE NOINTPROMOTE
                    - MODDP2 INCDIR(..\..\..\..\hal\nrf24le1;..\..\..\..\compiler\c51;..\..\..\..\compiler\common) DEBUG OBJECTEXTEND PRINT(.
                    -\lst\application.lst) TABS(2) OBJECT(.\build\application.obj)

line level    source

   1          //----------------------------------------------------------------
   2          //----------------------------------------------------------------
   3          // Module name: User Utility
   4          //
   5          // Copyright 2008 Fong Ming as an  unpublished work. 
   6          // All Rights Reserved.
   7          //
   8          // The information contained herein is confidential 
   9          // property of Company. The user, copying, transfer or 
  10          // disclosure of such information is prohibited except
  11          // by express written agreement with Company.
  12          //
  13          // First written on 2013-09-30 by Fong Ming
  14          //
  15          //----------------------------------------------------------------
  16          //----------------------------------------------------------------
  17          
  18          
  19          #include <stdio.h>
  20          #include "nrf24le1.h"
  21          #include "hal_uart.h"
  22          #include "hal_clk.h"
  23          #include "application.h"
  24          #include "utility.h"
  25          
  26          static unsigned char mTFlag=0;
  27          static unsigned char mFlag1S=0;
  28          
  29          void timer0_ISR (void) interrupt 1
  30          {
  31   1        static unsigned char tCnt=0;
  32   1        static unsigned char tCnt1S=0;
  33   1      
  34   1        // 16MHz/12 = 0.75uS
  35   1        // 0.75uS * 65536 = 49.152mS
  36   1      
  37   1        // 0.75uS * 8 * 1024 = 6.144mS
  38   1        // 6.144mS * 8 = 49.152mS
  39   1      
  40   1          tCnt ++;
  41   1        if (tCnt >=8)
  42   1        {
  43   2          mTFlag = 1;     // Set TimerFlag  
  44   2          tCnt = 0;
  45   2        }
  46   1      
  47   1        tCnt1S ++;
  48   1        if (tCnt1S >=81)
  49   1        {
  50   2          mFlag1S = 1;      // Set Flag1S 
  51   2          tCnt1S = 0;
  52   2        }
  53   1      
C51 COMPILER V9.51   APPLICATION                                                           10/03/2013 13:56:58 PAGE 2   

  54   1      }
  55          
  56          
  57          void app_init(void)
  58          {
  59   1        app_init_hardware();
  60   1        app_init_variable();
  61   1      
  62   1      }
  63          
  64          void app_init_hardware(void)
  65          {
  66   1        // Configure TXD pin as output.
  67   1        // P0.5, P0.3 and P1.0 are configured as outputs to make the example run on
  68   1        // either 24-pin, 32-pin or 48-pin nRF24LE1 variants.
  69   1        P0DIR = 0xD7;
  70   1        P1DIR = 0xFE;
  71   1      
  72   1        /*--------------------------------------
  73   1        Set Timer0 for 16-bit timer mode.  The
  74   1        timer counts to 65535, overflows, and
  75   1        generates an interrupt.
  76   1      
  77   1        Set the Timer0 Run control bit.
  78   1        --------------------------------------*/
  79   1        TMOD = (TMOD & 0xF0) | 0x00;  /* Set T/C0 Mode 13bit timer mode*/
  80   1        ET0 = 1;                      /* Enable Timer 0 Interrupts */
  81   1        TR0 = 1;                      /* Start Timer 0 Running */
  82   1        
  83   1        // Initializes the UART
  84   1        hal_uart_init(UART_BAUD_9K6);
  85   1        // Wait for XOSC to start to ensure proper UART baudrate
  86   1      //  while(hal_clk_get_16m_source() != HAL_CLK_XOSC16M)
  87   1      //  {}  
  88   1      
  89   1      }
  90          
  91          void app_init_variable(void)
  92          {
  93   1        mTFlag = 0;
  94   1        mFlag1S = 0;
  95   1      }
  96          
  97          void app_uart_cmd(void)
  98          {
  99   1            // If any characters received
 100   1            if( hal_uart_chars_available() )
 101   1            {
 102   2              P3 = 0x11;
 103   2              // Echo received characters
 104   2              u_putch(getchar());
 105   2            }
 106   1      }
 107          
 108          void app_timer_task(void)
 109          {
 110   1          if (mFlag1S==1)       // 100mS flag
 111   1          {
 112   2            mFlag1S = 0;
 113   2            LED0 = !LED0; 
 114   2          }
 115   1          
C51 COMPILER V9.51   APPLICATION                                                           10/03/2013 13:56:58 PAGE 3   

 116   1          if (mTFlag==1)    // 100mS flag
 117   1          {
 118   2            mTFlag = 0;
 119   2            LED1 = !LED1; 
 120   2          }
 121   1      }
 122          
 123          
 124          void app_main_loop(void)
 125          {
 126   1      
 127   1        for(;;)
 128   1          {
 129   2            app_uart_cmd();
 130   2            app_timer_task();
 131   2          }
 132   1      
 133   1      }
 134          
 135          
 136          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    114    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      4    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
