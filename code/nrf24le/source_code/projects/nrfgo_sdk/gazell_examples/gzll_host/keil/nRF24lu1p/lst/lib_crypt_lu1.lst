C51 COMPILER V9.51   LIB_CRYPT_LU1                                                         09/23/2013 15:07:37 PAGE 1   


C51 COMPILER V9.51, COMPILATION OF MODULE LIB_CRYPT_LU1
OBJECT MODULE PLACED IN .\build\lib_crypt_lu1.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE ..\..\..\..\..\..\lib\crypt\lib_crypt_lu1.c OBJECTADVANCED ROM(COMPACT) REG
                    -FILE(.\build\gzll_host_nrf24lu1p.ORC) BROWSE NOINTPROMOTE MODC2 INCDIR(..\..\..\..\..\..\hal;..\..\..\..\..\..\hal\nrf24
                    -l01p;..\..\..\..\..\..\gazell\common;..\..\..\..\..\..\gazell\nrf24lu1;..\..\..\params;..\..\..\..\..\..\lib\crypt;..\..
                    -\..\..\..\..\lib\assertions;..\..\..\..\..\..\hal\nrf24lu1p;..\..\..\..\..\..\compiler\c51;..\..\..\..\..\..\compiler\co
                    -mmon) DEBUG PRINT(.\lst\lib_crypt_lu1.lst) TABS(2) OBJECT(.\build\lib_crypt_lu1.obj)

line level    source

   1          /* Copyright (c) 2009 Nordic Semiconductor. All Rights Reserved.
   2           *
   3           * The information contained herein is confidential property of Nordic 
   4           * Semiconductor ASA.Terms and conditions of usage are described in detail 
   5           * in NORDIC SEMICONDUCTOR STANDARD SOFTWARE LICENSE AGREEMENT. 
   6           *
   7           * Licensees are granted free, non-transferable use of the information. NO
   8           * WARRENTY of ANY KIND is provided. This heading must NOT be removed from
   9           * the file.
  10           *              
  11           * $LastChangedRevision: 133 $
  12           */
  13          
  14          /** @file
  15           * @brief Implementation of AES encyption library nRF24LU1+ specific functions
  16           */
  17           
  18          #include <stdint.h>
  19          #include <stdbool.h>
  20          #include "nrf24lu1p.h"
  21          
  22          void lib_crypt_generate_ls5b(uint8_t * dest_buf)
  23          {
  24   1        uint8_t i;
  25   1        bool wrap = true;
  26   1        static xdata uint8_t ls5b[5] = {0, 0, 0, 0, 0};
  27   1        
  28   1        //Increment LS5B, and write back the new LS5B.
  29   1        for(i=0;i<5;i++)
  30   1        {   
  31   2          if(wrap)  //Check if we need to increment position i.
  32   2          {
  33   3            ls5b[i]++;
  34   3            if(ls5b[i] != 0x00) wrap = false; 
  35   3          }
  36   2      
  37   2          //Write out LS5B
  38   2          dest_buf[i] = ls5b[i]; 
  39   2        } 
  40   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     82    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      5    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
C51 COMPILER V9.51   LIB_CRYPT_LU1                                                         09/23/2013 15:07:37 PAGE 2   

   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
