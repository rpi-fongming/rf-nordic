C51 COMPILER V9.51   GZP_HOST_LE1                                                          09/06/2013 01:48:07 PAGE 1   


C51 COMPILER V9.51, COMPILATION OF MODULE GZP_HOST_LE1
OBJECT MODULE PLACED IN .\build\gzp_host_le1.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE ..\..\..\..\..\..\gazell\nrf24le1\gzp_host_le1.c LARGE OBJECTADVANCED ROM(C
                    -OMPACT) REGFILE(.\build\gzll_host_w_dyn_pair_nrf24le1.ORC) BROWSE NOINTPROMOTE MODC2 INCDIR(..\..\..\..\..\..\hal;..\..\
                    -..\..\..\..\hal\nrf24l01p;..\..\..\..\..\..\gazell\common;..\..\..\..\..\..\gazell\nrf24le1;..\..\..\params;..\..\..\..\
                    -..\..\hal\nrf24le1;..\..\..\..\..\..\lib\assertions;..\..\..\..\..\..\compiler\c51;..\..\..\..\..\..\compiler\common) DE
                    -FINE(EX_PROJ_LE1) DEBUG PRINT(.\lst\gzp_host_le1.lst) TABS(2) OBJECT(.\build\gzp_host_le1.obj)

line level    source

   1          /* Copyright (c) 2009 Nordic Semiconductor. All Rights Reserved.
   2           *
   3           * The information contained herein is confidential property of Nordic 
   4           * Semiconductor ASA.Terms and conditions of usage are described in detail 
   5           * in NORDIC SEMICONDUCTOR STANDARD SOFTWARE LICENSE AGREEMENT. 
   6           *
   7           * Licensees are granted free, non-transferable use of the information. NO
   8           * WARRENTY of ANY KIND is provided. This heading must NOT be removed from
   9           * the file.
  10           *              
  11           * $LastChangedRevision: 133 $
  12           */
  13           
  14          /** @file
  15           * @brief 
  16           * Implementation of nRF24LU1+ specific Device functions for the Gazell pairing library.
  17           */  
  18          
  19          #include "nrf24le1.h"
  20          #include <gzp.h>
  21          #include "hal_rng.h"
  22          #include "hal_flash.h"
  23          #include "memdefs.h"
  24          
  25          __no_init xdata uint8_t gzp_session_token[GZP_SESSION_TOKEN_LENGTH];
  26          __no_init xdata uint8_t gzp_dyn_key[GZP_DYN_KEY_LENGTH];
  27          
  28          void gzp_host_chip_id_read(uint8_t *dst, uint8_t n)
  29          {
  30   1        uint8_t i;
  31   1        
  32   1        if(hal_flash_byte_read(GZP_PARAMS_STORAGE_ADR + GZP_HOST_ID_LENGTH + 1) == 0xff)
  33   1        {
  34   2          hal_flash_byte_write((GZP_PARAMS_STORAGE_ADR + GZP_HOST_ID_LENGTH + 1), 0x00);
  35   2          hal_rng_power_up(true);
  36   2          for(i = 0; i < n; i++) 
  37   2          {
  38   3            while(!hal_rng_data_ready())
  39   3            ;
  40   3            hal_flash_byte_write((GZP_PARAMS_STORAGE_ADR + GZP_HOST_ID_LENGTH + 2 + i),  hal_rng_read());
  41   3          }
  42   2          hal_rng_power_up(false);
  43   2        }
  44   1        
  45   1        for(i = 0; i < n; i++) 
  46   1        {
  47   2          *(dst++) = hal_flash_byte_read((GZP_PARAMS_STORAGE_ADR + GZP_HOST_ID_LENGTH + 2 + i));
  48   2        }
  49   1      }


C51 COMPILER V9.51   GZP_HOST_LE1                                                          09/06/2013 01:48:07 PAGE 2   

MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    163    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     18       5
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
